<plugin id="Ex02ImageMix" version="@DASH_VERSION@" >

    <requirement id="dataReg" />
    <requirement id="servicesReg" />
    <requirement id="visuVTKQt" />

    <extension implements="::fwServices::registry::AppConfig2">
        <id>Ex02ImageMix</id>
        <config>

            <!-- backgroundImage description -->
            <object uid="backgroundImageUID" type="::fwData::Image" />
            <!-- frontImage description -->
            <object uid="frontImageUID" type="::fwData::Image" />
            <object uid="TFSelections" type="::fwData::Composite" />

            <service uid="mainFrame" type="::gui::frame::SDefaultFrame" >
                <gui>
                    <frame>
                        <name>Ex02ImageMix</name>
                        <icon>@BUNDLE_PREFIX@/Ex02ImageMix_0-1/tuto.ico</icon>
                        <minSize width="1280" height="720" />
                    </frame>
                    <menuBar />
                </gui>
                <registry>
                    <menuBar sid="menuBar" start="yes" />
                    <view sid="mainView" start="yes" />
                </registry>
            </service>
            <service uid="menuBar" type="::gui::aspect::SDefaultMenuBar" >
                <gui>
                    <layout>
                        <menu name="File" />
                    </layout>
                </gui>
                <registry>
                    <menu sid="menuFile" start="yes" />
                </registry>
            </service>
            <service uid="mainView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::CardinalLayoutManager">
                        <view align="left" />
                        <view align="center" minWidth="400" />
                        <view align="right" minWidth="400" />
                    </layout>
                </gui>
                <registry>
                    <view sid="editorsView" start="yes" />
                    <view sid="blendSceneView" start="yes" />
                    <view sid="imagesView" start="yes" />
                </registry>
            </service>
            <service uid="editorsView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::LineLayoutManager">
                        <orientation value="vertical" />
                        <view proportion="0" />
                        <view proportion="0" />
                        <spacer/>
                    </layout>
                </gui>
                <registry>
                    <view sid="bgImgEditorsView" start="yes" />
                    <view sid="frontImgEditorsView" start="yes" />
                </registry>
            </service>

            <service uid="menuFile" type="::gui::aspect::SDefaultMenu" >
                <gui>
                    <layout>
                        <menuItem name="Open Background Image" shortcut="Ctrl+O" />
                        <menuItem name="Open Front Image" shortcut="Ctrl+I" />
                        <separator />
                        <menuItem name="Quit" specialAction="QUIT" shortcut="Ctrl+Q" />
                    </layout>
                </gui>
                <registry>
                    <menuItem sid="actionOpenBackgroundFile" start="yes" />
                    <menuItem sid="actionOpenFrontFile" start="yes" />
                    <menuItem sid="actionQuit" start="yes" />
                </registry>
            </service>

            <service uid="actionOpenBackgroundFile" type="::gui::action::SStarter" >
                <start uid="readerBackgroundImage" />
            </service>
            <service uid="actionOpenFrontFile" type="::gui::action::SStarter" >
                <start uid="readerFrontImage" />
            </service>
            <service uid="actionQuit" type="::gui::action::SQuit"  />

            <service uid="imagesView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::LineLayoutManager">
                        <orientation value="vertical" />
                        <view proportion="1" minWidth="300" />
                        <view proportion="1" />
                    </layout>
                </gui>
                <registry>
                    <view sid="bgImgGenericScene" start="yes" />
                    <view sid="fgImgGenericScene" start="yes" />
                </registry>
            </service>

            <service uid="blendSceneView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::LineLayoutManager">
                        <orientation value="vertical" />
                        <view proportion="1" />
                        <view proportion="0" minHeight="30" />
                    </layout>
                </gui>
                <registry>
                    <view sid="blendGenericScene" start="yes" />
                    <view sid="blendSceneBottomView" start="yes" />
                </registry>
            </service>


            <service uid="blendSceneBottomView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::LineLayoutManager">
                        <orientation value="horizontal" />
                        <view proportion="1" />
                        <view proportion="0" minWidth="30" />
                    </layout>
                </gui>
                <registry>
                    <view sid="sliderIndexEditor" start="no" />
                    <view sid="snapshotBlendSceneEditor" start="yes" />
                </registry>
            </service>

            <service uid="snapshotBlendSceneEditor" type="::uiVisu::SnapshotEditor" />

            <service uid="readerBackgroundImage" type="::uiIO::editor::SIOSelector" >
                <inout key="target" uid="backgroundImageUID" />
                <type mode="reader" />
            </service>

            <service uid="readerFrontImage" type="::uiIO::editor::SIOSelector" >
                <inout key="target" uid="frontImageUID" />
                <type mode="reader" />
            </service>

            <service uid="bgImgEditorsView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::LineLayoutManager">
                        <orientation value="vertical" />
                        <view proportion="0" caption="[background image] Pixel info" />
                        <view proportion="0" caption="[background image] Window Level" />
                    </layout>
                </gui>
                <registry>
                    <view sid="imageInfo" start="yes" />
                    <view sid="windowLevel" start="yes" />
                </registry>
            </service>

            <!-- This service convert a simple fwData::Image to medical Image -->
            <service uid="medicalImageConverter" type="::ctrlSelection::MedicalImageSrv" >
                <inout key="image" uid="backgroundImageUID"/>
            </service>

            <service uid="sliderIndexEditor" type="::uiImage::SliceIndexPositionEditor" autoConnect="yes">
                <inout key="image" uid="backgroundImageUID"/>
                <sliceIndex>axial</sliceIndex>
            </service>

            <!-- Editors of background image -->
            <service uid="imageInfo" type="::uiImage::ImageInfo" autoConnect="yes">
                <inout key="image" uid="backgroundImageUID" autoConnect="yes"/>
            </service>
            <service uid="windowLevel" type="::uiImage::WindowLevel" autoConnect="yes">
                <inout key="image" uid="backgroundImageUID" autoConnect="yes"/>
                <inout key="TFSelections" uid="TFSelections" />
                <config selectedTFKey="BgSelectedTF" />
            </service>

            <service uid="frontImgEditorsView" type="::gui::view::SDefaultView" >
                <gui>
                    <layout type="::fwGui::LineLayoutManager">
                        <orientation value="vertical" />
                        <view proportion="0" caption="[front image] Pixel info" />
                        <view proportion="0" caption="[front image] Image transparency" />
                        <view proportion="0" caption="[front image] Window Level" />
                    </layout>
                </gui>
                <registry>
                    <view sid="imageInfo2" start="yes" />
                    <view sid="imageTransparency2" start="yes" />
                    <view sid="windowLevel2" start="yes" />
                </registry>
            </service>
            <!-- This service convert a simple fwData::Image to medical Image -->
            <service uid="medicalImageConverter2" type="::ctrlSelection::MedicalImageSrv" >
                <inout key="image" uid="frontImageUID"/>
            </service>
            <!-- Editors of front image -->
            <service uid="imageInfo2" type="::uiImage::ImageInfo" autoConnect="yes">
                <inout key="image" uid="frontImageUID" autoConnect="yes"/>
            </service>
            <service uid="imageTransparency2" type="::uiImage::ImageTransparency" autoConnect="yes">
                <inout key="image" uid="frontImageUID" autoConnect="yes"/>
                <shortcut value="V" />
            </service>
            <service uid="windowLevel2" type="::uiImage::WindowLevel" autoConnect="yes" >
                <inout key="image" uid="frontImageUID" autoConnect="yes"/>
                <inout key="TFSelections" uid="TFSelections" />
                <config selectedTFKey="FrontSelectedTF" />
            </service>

            <!-- Service to forward signal from backgroundImage to front image -->
            <service uid="forwarderMsg" type="::ctrlSelection::wrapper::SImageSignalForwarder" >
                <in key="target" uid="backgroundImageUID" />
                <in key="source" uid="frontImageUID" />
            </service>

            <!-- Generic scene to show merging of backgroung and front images -->
            <service uid="blendGenericScene" type="::fwRenderVTK::SRender" autoConnect="yes">
                <in key="backgroundImage" uid="backgroundImageUID" />
                <in key="frontImage" uid="frontImageUID" />
                <inout key="TFSelections" uid="TFSelections" />
                <scene>
                    <picker id="picker" vtkclass="fwVtkCellPicker" />
                    <vtkObject id="imageBlend" class="vtkImageBlend" />
                    <renderer id="default" background="0.0" />

                    <adaptor uid="MPRNegatoScene3D" id="MPRNegato3D" class="::visuVTKAdaptor::NegatoMPR" objectId="backgroundImage">
                        <config renderer="default" picker="picker" mode="2D" slices="1" sliceIndex="axial" vtkimagesource="imageBlend" />
                    </adaptor>
                    <adaptor id="interactor" class="::visuVTKAdaptor::InteractorStyle" objectId="self">
                        <config renderer="default" style="InteractorStyle2DForNegato" />
                    </adaptor>
                    <adaptor id="bgImagePicker" uid="bgImagePickerUID" class="::visuVTKAdaptor::ImagePickerInteractor" objectId="backgroundImage">
                        <config renderer="default" picker="picker" />
                    </adaptor>
                    <adaptor id="frontImagePicker" uid="frontImagePickerUID" class="::visuVTKAdaptor::ImagePickerInteractor" objectId="frontImage">
                        <config renderer="default" picker="picker" />
                    </adaptor>
                    <adaptor id="snapshot" uid="snapshotUID" class="::visuVTKAdaptor::Snapshot" objectId="self">
                        <config renderer="default" />
                    </adaptor>

                    <!-- Adaptor to show background and front image merge in the same view. -->
                    <adaptor id="imagesBlendAdaptor" class="::visuVTKAdaptor::ImagesBlend" objectId="self">
                        <config vtkimageregister="imageBlend">
                            <image objectId="backgroundImage" opacity="1.0" tfalpha="no"
                                selectedTFKey="BgSelectedTF" tfSelectionFwID="TFSelections" />
                            <image objectId="frontImage" opacity="1.0" tfalpha="yes"
                                selectedTFKey="FrontSelectedTF" tfSelectionFwID="TFSelections" />
                        </config>
                    </adaptor>

                    <!-- Adaptor to show the red cross and images pixel values informations in scene top left. -->
                    <adaptor id="imagesProbeCursor" class="::visuVTKAdaptor::ImagesProbeCursor" objectId="self">
                        <config renderer="default" picker="picker">
                            <image objectId="backgroundImage" name="background" />
                            <image objectId="frontImage" name="front" />
                        </config>
                    </adaptor>

                    <connect>
                        <signal>snapshotBlendSceneEditor/snapped</signal>
                        <slot>snapshotUID/snap</slot>
                    </connect>

                    <proxy channel="interactionChannel" waitForKey="backgroundImage">
                        <signal>bgImagePickerUID/picked</signal>
                    </proxy>


                    <proxy channel="interactionChannel2" waitForKey="frontImage">
                        <signal>frontImagePickerUID/picked</signal>
                    </proxy>
                </scene>
            </service>

            <!-- Generic scene for background image -->
            <service uid="bgImgGenericScene" type="::fwRenderVTK::SRender" autoConnect="yes">
                <in key="backgroundImage" uid="backgroundImageUID" />
                <inout key="TFSelections" uid="TFSelections" />
                <scene>
                    <picker id="picker" vtkclass="fwVtkCellPicker" />
                    <renderer id="default" background="0.0" />

                    <adaptor id="MPRNegato3D" class="::visuVTKAdaptor::NegatoMPR" objectId="backgroundImage">
                        <config renderer="default" picker="picker" mode="2D" slices="1" sliceIndex="axial"
                                selectedTFKey="BgSelectedTF" tfSelectionFwID="TFSelections" />
                    </adaptor>
                    <adaptor id="interactor" class="::visuVTKAdaptor::InteractorStyle" objectId="self">
                        <config renderer="default" style="InteractorStyle2DForNegato" />
                    </adaptor>
                    <adaptor id="imagePicker" uid="imagePickerUID" class="::visuVTKAdaptor::ImagePickerInteractor" objectId="backgroundImage">
                        <config renderer="default" picker="picker" />
                    </adaptor>

                    <proxy channel="interactionChannel" waitForKey="backgroundImage">
                        <signal>imagePickerUID/picked</signal>
                    </proxy>
                </scene>
            </service>

            <!-- Generic scene for front image -->
            <service uid="fgImgGenericScene" type="::fwRenderVTK::SRender" autoConnect="yes">
                <in key="frontImage" uid="frontImageUID" />
                <inout key="TFSelections" uid="TFSelections" />
                <scene>
                    <picker id="picker" vtkclass="fwVtkCellPicker" />
                    <renderer id="default" background="0.0" />

                    <adaptor id="MPRNegato3D" class="::visuVTKAdaptor::NegatoMPR" objectId="frontImage">
                        <config renderer="default" picker="picker" mode="2D" slices="1" sliceIndex="axial"
                                selectedTFKey="FrontSelectedTF" tfSelectionFwID="TFSelections" />
                    </adaptor>
                    <adaptor id="interactor" class="::visuVTKAdaptor::InteractorStyle" objectId="self">
                        <config renderer="default" style="InteractorStyle2DForNegato" />
                    </adaptor>
                    <adaptor id="imagePicker2" uid="imagePickerUID2" class="::visuVTKAdaptor::ImagePickerInteractor" objectId="frontImage">
                        <config renderer="default" picker="picker" />
                    </adaptor>

                    <proxy channel="interactionChannel2" waitForKey="frontImage">
                        <signal>imagePickerUID2/picked</signal>
                    </proxy>
                </scene>
            </service>

            <connect channel="interactionChannel">
                <slot>imageInfo/getInteraction</slot>
            </connect>
            <connect channel="interactionChannel2">
                <slot>imageInfo2/getInteraction</slot>
            </connect>

            <start uid="mainFrame" />

        </config>
    </extension>

</plugin>
