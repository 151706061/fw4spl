<plugin id="Tuto12Picker" version="@DASH_VERSION@" >

    <requirement id="dataReg" />
    <requirement id="servicesReg" />
    <requirement id="visuVTKQt" />

    <extension implements="::fwServices::registry::AppConfig">
        <id>Tuto12Picker</id>
        <config>

            <object type="::fwData::Composite">
                <service uid="MyIHM" impl="::gui::frame::SDefaultFrame" type="::fwGui::IFrameSrv" autoConnect="no">
                    <gui>
                        <frame>
                            <name>Tuto12Picker</name>
                            <icon>Bundles/Tuto12Picker_0-1/tuto.ico</icon>
                            <minSize width="800" height="600" />
                        </frame>
                        <menuBar />
                    </gui>
                    <registry>
                        <menuBar sid="myMenuBar" start="yes" />
                        <view sid="mainView" start="yes" />
                    </registry>
                </service>
                <service uid="myMenuBar" type="::fwGui::IMenuBarSrv" impl="::gui::aspect::SDefaultMenuBar" autoConnect="no">
                    <gui>
                        <layout>
                            <menu name="File" />
                        </layout>
                    </gui>
                    <registry>
                        <menu sid="menu_File" start="yes" />
                    </registry>
                </service>

                <service uid="menu_File" type="::fwGui::IMenuSrv" impl="::gui::aspect::SDefaultMenu" autoConnect="no">
                    <gui>
                        <layout>
                            <menuItem name="Open image" shortcut="Ctrl+I" />
                            <menuItem name="Open mesh" shortcut="Ctrl+M" />
                            <separator />
                            <menuItem name="Quit" specialAction="QUIT" shortcut="Ctrl+Q" />
                        </layout>
                    </gui>
                    <registry>
                        <menuItem sid="action_openImage" start="yes" />
                        <menuItem sid="action_openMesh" start="yes" />
                        <menuItem sid="action_quit" start="yes" />
                    </registry>
                </service>

                <service uid="action_openImage" type="::fwGui::IActionSrv" impl="::gui::action::SStarter" autoConnect="no">
                    <start uid="imageReader" />
                </service>
                <service uid="action_openMesh" type="::fwGui::IActionSrv" impl="::gui::action::SStarter" autoConnect="no">
                    <start uid="meshReader" />
                </service>
                <service uid="action_quit" type="::fwGui::IActionSrv" impl="::gui::action::SQuit" autoConnect="no" />

                <service uid="mainView" type="::gui::view::IView" impl="::gui::view::SDefaultView" autoConnect="no">
                    <gui>
                        <layout type="::fwGui::LineLayoutManager">
                            <orientation value="vertical" />
                            <view caption="Picker world coordinate." proportion="0" />
                            <view caption="Generic scene" border="11" proportion="1" />
                        </layout>
                    </gui>
                    <registry>
                        <view sid="pointView" start="yes" />
                        <view sid="multiViewScene" start="yes" />
                    </registry>
                </service>

                <service uid="multiViewScene" type="::gui::view::IView" impl="::gui::view::SDefaultView" autoConnect="no">
                    <gui>
                        <layout type="::fwGui::CardinalLayoutManager">
                            <view align="center" />
                            <view align="bottom" minWidth="400" minHeight="30" resizable="no" />
                        </layout>
                    </gui>
                    <registry>
                        <view sid="genericScene" start="yes" />
                        <view sid="multiViewScene_bottom" start="yes" />
                    </registry>
                </service>


                <service uid="multiViewScene_bottom" type="::gui::view::IView" impl="::gui::view::SDefaultView" autoConnect="no">
                    <gui>
                        <layout type="::fwGui::LineLayoutManager">
                            <orientation value="horizontal" />
                            <view proportion="0" minWidth="30" />
                            <view proportion="0" minWidth="50" />
                            <view proportion="1" />
                            <view proportion="0" minWidth="30" />
                        </layout>
                    </gui>
                    <registry>
                        <view sid="sliceListEditor" start="no" />
                        <view sid="showScanEditor" start="yes" />
                        <view sid="sliderIndexEditor" start="no" />
                        <view sid="snapshotScene1Editor" start="yes" />
                    </registry>
                </service>

                <service uid="snapshotScene1Editor" type="::gui::editor::IEditor" impl="::uiVisu::SnapshotEditor" autoConnect="no" />

                <service uid="showScanEditor" type="::gui::editor::IEditor" impl="::guiQt::editor::SSignalButton" autoConnect="no">
                    <config>
                        <checkable>true</checkable>
                        <icon>Bundles/media_0-1/icons/sliceHide.png</icon>
                        <icon2>Bundles/media_0-1/icons/sliceShow.png</icon2>
                        <iconWidth>40</iconWidth>
                        <iconHeight>16</iconHeight>
                        <checked>true</checked>
                    </config>
                </service>
                
                <item key="mesh">
                    <object uid="meshUID" type="::fwData::Mesh">
                        <service uid="meshReader" impl="::uiIO::editor::SIOSelector" type="::gui::editor::IDialogEditor" autoConnect="no">
                            <type mode="reader" />
                        </service>
                    </object>
                </item>
                <item key="image">
                    <object uid="imageUID" type="::fwData::Image">
                        <service uid="imageReader" impl="::uiIO::editor::SIOSelector" type="::gui::editor::IDialogEditor" autoConnect="no">
                            <type mode="reader" />
                        </service>
                    </object>
                </item>

                <!-- CompositeVisu description -->
                <item key="myCompositeVisu">
                    <object uid="myCompositeVisu" type="::fwData::Composite">

                        <service uid="updaterImageUID" impl="::ctrlSelection::updater::SObjFromUid" type="::ctrlSelection::IUpdaterSrv" autoConnect="no">
                            <uid>imageUID</uid>
                            <compositeKey>image</compositeKey>
                        </service>
                        <service uid="updaterMeshUID" impl="::ctrlSelection::updater::SObjFromUid" type="::ctrlSelection::IUpdaterSrv" autoConnect="no">
                            <uid>meshUID</uid>
                            <compositeKey>mesh</compositeKey>
                        </service>

                        <service uid="pointView" impl="::uiVisu::PointEditor" type="::gui::editor::IEditor" autoConnect="yes" />

                        <service uid="genericScene" impl="::fwRenderVTK::VtkRenderService" type="::fwRender::IRender" autoConnect="yes">
                            <scene>
                                <picker id="myPicker" vtkclass="fwVtkCellPicker" />

                                <renderer id="default" background="0.0" />

                                <adaptor id="meshAdaptor" class="::visuVTKAdaptor::Mesh" objectId="mesh">
                                    <config renderer="default" picker="" />
                                </adaptor>

                                <adaptor uid="MPRNegatoScene3D" id="MPRNegato3D" class="::visuVTKAdaptor::NegatoMPR" objectId="image">
                                    <config renderer="default" picker="myPicker" mode="3D" slices="3" sliceIndex="axial" />
                                </adaptor>
                                <adaptor id="snapshot1" uid="snapshotUID" class="::visuVTKAdaptor::Snapshot" objectId="self">
                                    <config renderer="default" />
                                </adaptor>

                                <adaptor id="pickerInteractor" uid="pickerInteractorUID" class="::visuVTKAdaptor::PickerInteractor" objectId="self">
                                    <config renderer="default" picker="myPicker" />
                                </adaptor>

                                <connect>
                                    <signal>snapshotScene1Editor/snapped</signal>
                                    <slot>snapshotUID/snap</slot>
                                </connect>
                                
                                <connect waitForKey="image">
                                    <signal>showScanEditor/toggled</signal>
                                    <slot>MPRNegatoScene3D/showSlice</slot>
                                </connect>
                                <proxy channel="sliceListChannel" waitForKey="image">
                                    <slot>MPRNegatoScene3D/updateSliceMode</slot>
                                </proxy>
                                
                                <connect>
                                    <signal>pickerInteractorUID/picked</signal>
                                    <slot>pointView/getInteraction</slot>
                                </connect>

                            </scene>
                        </service>

                        <service uid="manager" impl="::ctrlSelection::manager::SwapperSrv" type="::ctrlSelection::IManagerSrv" autoConnect="yes">
                            <mode type="stop" />
                            <config>
                                <object id="image" type="::fwData::Image">
                                    <!-- This service convert a simple fwData::Image to medical Image -->
                                    <service uid="medicalImageConverter" impl="::ctrlSelection::MedicalImageSrv" type="::fwServices::IController" autoConnect="yes" />
                                    <service uid="sliceListEditor" type="::gui::editor::IEditor" impl="::guiQt::editor::SSelectionMenuButton" autoConnect="no">
                                        <toolTip>Manage slice visibility</toolTip>
                                        <selected>3</selected>
                                        <items>
                                            <item text="One slice" value="1" />
                                            <item text="three slices" value="3" />
                                        </items>
                                    </service>

                                    <service uid="sliderIndexEditor" type="::gui::editor::IEditor" impl="::uiImage::SliceIndexPositionEditor" autoConnect="yes">
                                        <sliceIndex>axial</sliceIndex>
                                    </service>
                                    <proxy channel="sliceListChannel">
                                        <signal>sliceListEditor/selected</signal>
                                    </proxy>
                                </object>
                            </config>
                        </service>
                        
                        <connect>
                            <signal>imageUID/modified</signal>
                            <slot>updaterImageUID/addOrSwap</slot>
                        </connect>
                        
                        <connect>
                            <signal>meshUID/modified</signal>
                            <slot>updaterMeshUID/addOrSwap</slot>
                        </connect>

                    </object>
                </item>

                <start uid="MyIHM" />
                <start uid="updaterImageUID" />
                <start uid="updaterMeshUID" />
                <start uid="manager" />

            </object>
        </config>
    </extension>

</plugin>
