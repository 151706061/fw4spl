<extension implements="::fwServices::registry::AppConfig2">
    <id>VolumeRendering</id>
    <parameters>
        <!-- activity parameters -->
        <param name="WID_PARENT" />
        <param name="SERIESDB" />
        <param name="AS_UID" />
        <param name="ICON_PATH" />

        <!-- data -->
        <param name="image" />
        <param name="patient_name" default="" />
        <param name="optionalModelSeriesComposite" />
    </parameters>

        <!-- input image -->
    <config>
        <!-- activity -->
        <object uid="${SERIESDB}" type="::fwMedData::SeriesDB" src="ref" />
        <object uid="${AS_UID}" type="::fwMedData::ActivitySeries" src="ref" />

        <!-- input image -->
        <object uid="${image}" type="::fwData::Image" src="ref" />

        <!-- Transfer function -->
        <object uid="TFSelections" type="::fwData::Composite" />

        <!-- optional model series -->
        <object uid="${optionalModelSeriesComposite}" type="::fwData::Composite" src="ref" />
        <object uid="optionalModelSeries" type="::fwData::Image" src="deferred" />

        <!-- TF editor -->
        <object uid="Histogram" type="::fwData::Histogram" />
        <object uid="landmarks" type="::fwData::Landmarks" />

        <service uid="mainView" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::CardinalLayoutManager">
                    <view caption="VR" align="center" />
                    <view align="right" minWidth="450" />
                </layout>
                <toolBar />
            </gui>
            <registry>
                <parent wid="${WID_PARENT}" />
                <toolBar sid="toolBar" start="yes" />
                <view sid="vr" start="no" />
                <view wid="tfEditor" />
            </registry>
        </service>

        <service uid="toolBar" type="::gui::aspect::SDefaultToolBar">
            <gui>
                <layout>
                    <menuItem name="Hide cross" icon="@BUNDLE_PREFIX@/media_0-1/icons/HideCross.png" style="radio" />
                    <menuItem name="Show normal cross" icon="@BUNDLE_PREFIX@/media_0-1/icons/NormalCross.png" style="radio" />
                    <menuItem name="Show full cross" icon="@BUNDLE_PREFIX@/media_0-1/icons/FullCross.png" style="radio" />
                    <separator />
                    <menuItem name="Show 3d slice cursor" icon="@BUNDLE_PREFIX@/media_0-1/icons/icon-landmark.png" style="check" />
                    <menuItem name="Show mesh" icon="@BUNDLE_PREFIX@/media_0-1/icons/icon-3D.png" style="check" />
                    <menuItem name="Manage organs color" icon="@BUNDLE_PREFIX@/media_0-1/icons/ManageOrgan.png" style="check" />
                    <separator />
                    <menuItem name="Show/hide box cropping" icon="@BUNDLE_PREFIX@/media_0-1/icons/icon-box.png" style="check" />
                    <menuItem name="Reset box cropping" icon="@BUNDLE_PREFIX@/media_0-1/icons/icon-box-reset.png" />
                    <separator />
                    <menuItem name="Snapshot VR" icon="@BUNDLE_PREFIX@/media_0-1/icons/camera-photo.png" />
                    <separator />
                    <menuItem name="Export Activity" icon="@BUNDLE_PREFIX@/media_0-1/icons/Export.svg" />
                </layout>
            </gui>
            <registry>
                <menuItem sid="ActionHideCross" start="yes" />
                <menuItem sid="ActionShowNormalCross" start="yes" />
                <menuItem sid="ActionShowFullCross" start="yes" />

                <menuItem sid="ActionShowSliceCursor" start="no" />
                <menuItem sid="ActionShowMesh" start="yes" />
                <menuItem sid="action_organManager" start="no" />

                <menuItem sid="ActionShowHideBoxWidget" start="yes" />
                <menuItem sid="ActionResetBoxWidget" start="yes" />

                <menuItem sid="ActionSnapshotVR" start="yes" />

                <menuItem sid="ActionExportActivity" start="yes" />
            </registry>
        </service>

        <service uid="TFScene2D" type="::gui::view::SDefaultView">
            <gui>
                <layout type="::fwGui::LineLayoutManager">
                    <orientation value="vertical" />
                    <view proportion="0" minHeight="100" />
                    <view proportion="1" />
                    <view proportion="0" minHeight="30" />
                </layout>
            </gui>
            <registry>
                <view sid="Scene2D_Shutter" start="no" />
                <view sid="Scene2D" start="no" />
                <view sid="FloatEditor" start="no" />
            </registry>
        </service>

        <service uid="ActionExportActivity" type="::uiMedData::action::SExportSeries" autoConnect="yes">
            <inout key="seriesDB" uid="${SERIESDB}" />
            <inout key="series" uid="${AS_UID}" />
        </service>

        <!-- GENERIC SCENE DEFINITION -->

<!--        <service uid="ActionShowSliceCursor" type="::gui::action::SPushObject" type="::fwGui::IActionSrv">
            <push src="VisuComposite[imageKey]" key="imageKeyCursor" />
        </service>-->

        <service uid="ActionShowMesh" type="::gui::action::SPushObject">
            <inout key="source" uid="${optionalModelSeriesComposite}" />
            <out key="destination" uid="optionalModelSeries" />
            <push srcKey="optionalModelSeriesKey" />
        </service>

        <service uid="action_organManager" type="::gui::action::SConfigLauncher" >
            <appConfig id="OrganManagerWithSeries" />
            <inout key="ORGAN_MANAGER_MODELSERIES" uid="optionalModelSeries"/>
            <parameter replace="ICON_PATH" by="${ICON_PATH}" />
            <parameter replace="ModelRepresentationChannel" uid="ModelRepresentationChannel" />
            <parameter replace="ModelDisplayChannel" uid="ModelDisplayChannel" />
        </service>

        <service uid="ActionSnapshotVR" type="::uiVisu::action::SSnapshot" />

        <!-- Generic Scene VR -->
        <service uid="vr" type="::fwRenderVTK::SRender" autoConnect="yes">
            <in key="imageKey" uid="${image}" />
            <in key="modelSeries" uid="optionalModelSeries" optional="yes"/>
            <inout key="TFSelections" uid="TFSelections" />
            <scene>

                <picker id="negato1default" vtkclass="fwVtkCellPicker" />

                <renderer id="default" background="0.0" />

                <adaptor id="snapshot1" uid="snapshotUID" class="::visuVTKAdaptor::Snapshot" objectId="self">
                    <config renderer="default" />
                </adaptor>

                <adaptor id="Interactor1" class="::visuVTKAdaptor::InteractorStyle" objectId="self">
                    <config renderer="default" style="InteractorStyle3DForNegato" />
                </adaptor>

                <adaptor id="Image3DCursor" class="::visuVTKAdaptor::Image3DCursor" objectId="imageKeyCursor">
                    <config renderer="default" />
                </adaptor>

                <adaptor id="modelSeriesAdaptor" uid="modelSeriesAdaptorUid" class="::visuVTKAdaptor::ModelSeries" objectId="modelSeries">
                    <config renderer="default" picker="negato1default" autoresetcamera="no" />
                </adaptor>

                <adaptor id="VolumeScene3DA" uid="VolumeScene3DA" class="::visuVTKVRAdaptor::Volume" objectId="imageKey">
                    <config renderer="default" selectedTFKey="SelectedTF" tfSelectionFwID="TFSelections" />
                </adaptor>

                <adaptor id="nameAdaptor" class="::visuVTKAdaptor::Text" objectId="imageKey">
                    <config renderer="default" text="${patient_name}" fontSize="15" hAlign="right" vAlign="top" />
                </adaptor>

                <proxy channel="ModelRepresentationChannel" waitForKey="modelSeries">
                    <slot>modelSeriesAdaptorUid/updateNormalMode</slot>
                </proxy>

                <proxy channel="ModelDisplayChannel" waitForKey="modelSeries">
                    <slot>modelSeriesAdaptorUid/showReconstructions</slot>
                </proxy>

                <connect>
                    <signal>ActionSnapshotVR/snapped</signal>
                    <slot>snapshotUID/snap</slot>
                </connect>

            </scene>
        </service>

        <!-- Services working on input image -->
        <service uid="LockImageSrv" type="::ctrlMemory::LockDumpSrv" >
            <in key="image" uid="${image}" />
        </service>

        <service uid="MedicalImageSrv" type="::ctrlSelection::MedicalImageSrv" >
            <inout key="image" uid="${image}" />
        </service>

        <service uid="ActionHideCross" type="::uiVisu::action::CrossTypeAction">
            <in key="image" uid="${image}" />
            <crossType>hide</crossType>
        </service>

        <service uid="ActionShowNormalCross" type="::uiVisu::action::CrossTypeAction">
            <in key="image" uid="${image}" />
            <crossType>half</crossType>
            <state active="true" />
        </service>

        <service uid="ActionShowFullCross" type="::uiVisu::action::CrossTypeAction">
            <in key="image" uid="${image}" />
            <crossType>full</crossType>
        </service>

        <service uid="ActionShowHideBoxWidget" type="::gui::action::SBooleanSlotCaller">
            <slots>
                <slot>VolumeScene3DA/activateBoxClipping</slot>
            </slots>
            <state active="true" />
        </service>

        <service uid="ActionResetBoxWidget" type="::gui::action::SSlotCaller">
            <slots>
                <slot>VolumeScene3DA/resetBoxWidget</slot>
            </slots>
        </service>

        <!-- Services working on TF -->
        <service uid="tfEditor" type="::fwServices::SConfigController">
            <appConfig id="TransferFunctionWithNegatoEditor" />
            <inout key="image" uid="${image}"/>
            <inout key="histogram" uid="Histogram"/>
            <inout key="landmarks" uid="landmarks" />
            <inout key="TFSelections" uid="TFSelections" />
            <parameter replace="WID_PARENT" uid="tfEditor"/>
            <parameter replace="SelectedTFKey" by="SelectedTF" />
        </service>

        <service uid="computeHistogram" type="::scene2D::processing::SComputeHistogram" autoConnect="yes" worker="COMPUTING_THREAD">
            <in key="image" uid="${image}" />
            <inout key="histogram" uid="Histogram" />
            <binsWidth>5.0</binsWidth>
        </service>

        <!-- If the image has landmarks, extract them and display them in the TF editor -->
        <service uid="extractLandmarks" type="::ctrlCamp::SCopy" >
            <in key="source" uid="${image}">
                <extract from="@fields.m_landmarksId" />
            </in>
            <inout key="target" uid="landmarks"/>
        </service>

        <!-- START AND STOP SERVICES -->
        <start uid="computeHistogram" />
        <start uid="LockImageSrv" />
        <start uid="MedicalImageSrv" />
        <start uid="mainView" />
        <start uid="tfEditor" />
        <start uid="vr" />
        <start uid="extractLandmarks" />

        <!-- Deferred start -->
        <start uid="action_organManager" />

        <update uid="extractLandmarks" />

    </config>
</extension>
